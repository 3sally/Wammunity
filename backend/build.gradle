buildscript{
    dependencies {
        //QueryDSL
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10"
    }
}

plugins {
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.web'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	//JDBC
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	
	//QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0'
	
	//JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	//Hibernate
	//runtimeOnly 'com.h2database:h2'
	implementation group: 'com.h2database', name: 'h2'
	
	//Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	//MySql
	//runtimeOnly 'mysql:mysql-connector-java'
	implementation 'mysql:mysql-connector-java'
	
	//S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	
	//JWT
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	
	//Validation
  	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.6.2'
  	
  	//Security
  	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.5.5'
  	
  	//Annotation
  	implementation 'org.jetbrains:annotations:22.0.0'
  	
  	//Swagger
  	implementation 'io.springfox:springfox-boot-starter:3.0.0'
  	implementation 'io.springfox:springfox-swagger-ui:3.0.0'

	//Gson
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
	
	//JSON
	implementation group: 'org.json', name: 'json', version: '20210307'
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
}


//QueryDSL 
apply plugin: 'com.ewerk.gradle.plugins.querydsl'

// QueryDSL 
def querydslDir = 'src/main/generated'
querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslDir]
        }
    }
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}

tasks.named('test') {
	useJUnitPlatform()
}
